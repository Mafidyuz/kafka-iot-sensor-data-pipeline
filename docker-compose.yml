version: '3'
services:
  zookeeper:
    image: 'confluentinc/cp-zookeeper:latest'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - '2181:2181'

  kafka:
    image: 'confluentinc/cp-kafka:latest'
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
    environment:
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:9092'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  postgres:
    image: 'postgres:latest'
    environment:
      POSTGRES_USER: userkafka
      POSTGRES_PASSWORD: password
      POSTGRES_DB: sensor_data
    ports:
      - '5432:5432'
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U userkafka -d sensor_data"]
      interval: 10s
      timeout: 5s
      retries: 5


  producer:
    build: ./producer
    depends_on:
      - kafka
    environment:
      KAFKA_BOOTSTRAP_SERVERS: 'kafka:9092'

  consumer:
    build: ./consumer
    depends_on:
      - kafka
      - postgres
    environment:
      KAFKA_BOOTSTRAP_SERVERS: 'kafka:9092'
      POSTGRES_DB: 'sensor_data'
      POSTGRES_USER: 'userkafka'
      POSTGRES_PASSWORD: 'password'
      POSTGRES_HOST: 'postgres'


  ui:
    build: ./ui
    depends_on:
      - postgres
    ports:
      - '5000:5000'
    environment:
      POSTGRES_DB: 'sensor_data'
      POSTGRES_USER: 'userkafka'
      POSTGRES_PASSWORD: 'password'
      POSTGRES_HOST: 'postgres'

  alert_consumer:
    build: ./alert_consumer
    depends_on:
      - kafka
    environment:
      KAFKA_BOOTSTRAP_SERVERS: 'kafka:9092'
